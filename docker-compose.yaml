services:
  auth-service:
    container_name: auth-service-container
    build:
      context: ./services/auth/
      dockerfile: Auth.Api/Dockerfile
    ports:
      - '9090:8080'
    environment:
      ConnectionStrings__DefaultConnection: ${AUTH_DB_CONN}
      ConnectionStrings__BlobStorageConnection: ${BLOB_CONN}
      Jwt__Key: ${JWT_KEY}
      Email__Server: ${EMAIL_SERVER}
      Email__Port: ${EMAIL_PORT}
      Email__Sender: ${EMAIL_SENDER}
      Email__Username: ${EMAIL_USERNAME}
      Email__Password: ${EMAIL_PASSWORD}
      RedirectUrl__EmailConfirmSuccess: ${EMAIL_CONFIRM_SUCCESS}
      RedirectUrl__EmailConfirmFail: ${EMAIL_CONFIRM_FAIL}
      RedirectUrl__PasswordReset: ${PASSWORD_RESET_URL}
    depends_on:
      - auth-db
    restart: always
    networks:
      - backend-network

  auth-db:
    container_name: auth-db-container
    image: postgres
    ports:
      - '5001:5432'
    environment:
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASS}
      POSTGRES_DB: ${AUTH_DB_NAME}
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    networks:
      - backend-network
  
  catalog-service:
    container_name: catalog-service-container
    build:
      context: ./services/catalog/
      dockerfile: Catalog.Api/Dockerfile
    ports:
      - '9091:8080'
    environment:
      ConnectionStrings__DefaultConnection: ${CATALOG_DB_CONN}
      ConnectionStrings__BlobStorageConnection: ${BLOB_CONN}
    depends_on:
      - catalog-db
    restart: always
    networks:
      - backend-network

  catalog-db:
    container_name: catalog-db-container
    image: postgres
    ports:
      - '5002:5432'
    environment:
      POSTGRES_USER: ${CATALOG_DB_USER}
      POSTGRES_PASSWORD: ${CATALOG_DB_PASS}
      POSTGRES_DB: ${CATALOG_DB_NAME}
    volumes:
      - catalog_db_data:/var/lib/postgresql/data
    networks:
      - backend-network
  
  blob-storage:
    container_name: blob-storage-container
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - '10000:10000'
    command: azurite-blob --blobHost 0.0.0.0 --skipApiVersionCheck
    volumes:
      - blob_storage_data:/data

volumes:
  auth_db_data:
  catalog_db_data:
  blob_storage_data:

networks:
  backend-network: