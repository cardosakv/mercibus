services:
  auth-service:
    container_name: auth-service-container
    build:
      context: ./services/auth/
      dockerfile: Auth.Api/Dockerfile
    ports:
      - '5000:8080'
    environment:
      ConnectionStrings__DefaultConnection: ''
      Jwt__Key: ''
      Email__Server: ''
      Email__Port: ''
      Email__Sender: ''
      Email__Username: ''
      Email__Password: ''
      RedirectUrl__EmailConfirmSuccess: ''
      RedirectUrl__EmailConfirmFail: ''
      RedirectUrl__PasswordReset: ''
    depends_on:
      - auth-db
    restart: always
    networks:
      - backend-network

  auth-db:
    container_name: auth-db-container
    image: postgres
    ports:
      - '5001:5432'
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'mercibus_auth_db'
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    networks:
      - backend-network
  
  catalog-service:
    container_name: catalog-service-container
    build:
      context: ./services/catalog/
      dockerfile: Catalog.Api/Dockerfile
    ports:
      - '6000:8080'
    environment:
      ConnectionStrings__DefaultConnection: 'Host=catalog-db;Port=5432;Database=mercibus_catalog_db;User Id=postgres;Password=postgres;'
    depends_on:
      - catalog-db
    restart: always
    networks:
      - backend-network

  catalog-db:
    container_name: catalog-db-container
    image: postgres
    ports:
      - '6001:5432'
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'mercibus_catalog_db'
    volumes:
      - catalog_db_data:/var/lib/postgresql/data
    networks:
      - backend-network

volumes:
  auth_db_data:
  catalog_db_data:

networks:
  backend-network: