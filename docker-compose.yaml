services:
  auth-service:
    container_name: auth-service-container
    build:
      context: ./services/auth/
      dockerfile: Auth.Api/Dockerfile
    ports:
      - '5000:8080'
    environment:
      ConnectionStrings__DefaultConnection: ''
      ConnectionStrings__BlobStorageConnection: ''
      Jwt__Key: ''
      Email__Server: ''
      Email__Port: ''
      Email__Sender: ''
      Email__Username: ''
      Email__Password: ''
      RedirectUrl__EmailConfirmSuccess: ''
      RedirectUrl__EmailConfirmFail: ''
      RedirectUrl__PasswordReset: ''
    depends_on:
      - auth-postgres
    restart: always
    networks:
      - backend-network
  
  auth-postgres:
    container_name: auth-postgres-container
    image: postgres
    ports:
      - '5001:5432'
    environment:
      POSTGRES_USER: ''
      POSTGRES_PASSWORD: ''
      POSTGRES_DB: ''
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network
  
  blob-storage:
    container_name: blob-storage-container
    image: mcr.microsoft.com/azure-storage/azurite
    ports:
      - '10000:10000'
    command: azurite-blob --blobHost 0.0.0.0 --skipApiVersionCheck
    volumes:
      - blob_storage_data:/data

volumes:
  auth_postgres_data:
  blob_storage_data:

networks:
  backend-network: