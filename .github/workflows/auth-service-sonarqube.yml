name: Auth Service SonarQube

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'services/auth/**'
  pull_request:
    branches:
      - main
      - develop
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - 'services/auth/**'
    
jobs:
  analyze:
    runs-on: windows-latest
    
    defaults:
      run:
        working-directory: ./services/auth/
    
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' 
      
      - name: Checkout code 
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
          
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Build and analyze with coverage
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin `
            /k:"cardosakv_mercibus" `
            /o:"cardosakv" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.opencover.reportsPaths="coverage.opencover.xml"

          dotnet build Auth.Api/Auth.Api.csproj

          dotnet test Auth.Tests/Auth.Tests.csproj `
            /p:CollectCoverage=true `
            /p:CoverletOutputFormat=opencover `
            /p:CoverletOutput=../coverage.opencover.xml

          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"