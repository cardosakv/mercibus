name: Auth Service SonarQube

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'services/auth/**'
  pull_request:
    branches:
      - main
      - develop
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - 'services/auth/**'
    
jobs:
  analyze:
    runs-on: windows-latest
    
    defaults:
      run:
        working-directory: ./services/auth/
    
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' 
      
      - name: Install Coverlet globally
        run: dotnet tool install -g coverlet.console

      - name: Add tools to PATH
        run: echo "$HOME/.dotnet/tools" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8

      - name: Install SonarScanner CLI
        run: dotnet tool install dotnet-sonarscanner --tool-path .sonar

      - name: SonarScanner Begin
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .sonar/dotnet-sonarscanner begin `
            /k:"cardosakv_mercibus" `
            /o:"cardosakv" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.opencover.reportsPaths="coverage.xml"

      - name: Build
        run: dotnet build Auth.Api/Auth.Api.csproj --no-incremental

      - name: Run Coverlet Console
        run: |
          coverlet Auth.Tests\bin\Debug\net8.0\Auth.Tests.dll `
            --target "dotnet" `
            --targetargs "test Auth.Tests\Auth.Tests.csproj --no-build" `
            -f opencover `
            -o "coverage.xml"

      - name: SonarScanner End
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .sonar/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"