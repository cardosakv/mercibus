name: Base Test and SonarCloud Analysis

on:
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      project_key:
        required: true
        type: string
      project_dll:
        required: true
        type: string
    secrets:
      sonar_token:
        required: true
      jwt_key:
        required: false
      email_server:
        required: false
      email_port:
        required: false
      email_sender:
        required: false
      email_username:
        required: false
      email_password:
        required: false
      redirect_email_confirm_success:
        required: false
      redirect_email_confirm_fail:
        required: false
      redirect_password_reset:
        required: false

jobs:
  analyze:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./services/${{ inputs.service }}/

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "zulu"

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p .sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path .sonar/scanner

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
        run: |
          .sonar/scanner/dotnet-sonarscanner begin \
            /k:"${{ inputs.project_key }}" \
            /o:"cardosakv" \
            /d:sonar.token="${{ secrets.sonar_token }}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="**/TestResults/*.coverage.opencover.xml" \
            /d:sonar.coverage.exclusions="**/${{ inputs.project_dll }}.Infrastructure/Migrations/*.cs,**/${{ inputs.project_dll }}.Application/Common/**/*.cs,**/${{ inputs.project_dll }}.Api/Program.cs,**/${{ inputs.project_dll }}.Api/Extensions/*.cs" \

      - name: Restore and build
        run: |
          dotnet restore
          dotnet build --no-restore --configuration Release

      - name: Install Coverlet CLI
        run: dotnet tool install --global coverlet.console

      - name: Add .NET tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Run Unit Tests with coverage
        run: |
          dotnet test ./${{ inputs.project_dll }}.UnitTests/${{ inputs.project_dll }}.UnitTests.csproj \
            --no-build --configuration Release \
            /p:CollectCoverage=true \
            /p:CoverletOutput=$(pwd)/TestResults/unit.coverage \
            /p:CoverletOutputFormat=\"opencover,cobertura\"
        env:
          Jwt__Key: ${{ secrets.jwt_key }}
          Email__Server: ${{ secrets.email_server }}
          Email__Port: ${{ secrets.email_port }}
          Email__Sender: ${{ secrets.email_sender }}
          Email__Username: ${{ secrets.email_username }}
          Email__Password: ${{ secrets.email_password }}
          RedirectUrl__EmailConfirmSuccess: ${{ secrets.redirect_email_confirm_success }}
          RedirectUrl__EmailConfirmFail: ${{ secrets.redirect_email_confirm_fail }}
          RedirectUrl__PasswordReset: ${{ secrets.redirect_password_reset }}

      - name: Run Integration Tests with coverage
        run: |
          dotnet test ./${{ inputs.project_dll }}.IntegrationTests/${{ inputs.project_dll }}.IntegrationTests.csproj \
            --no-build --configuration Release \
            /p:CollectCoverage=true \
            /p:CoverletOutput=$(pwd)/TestResults/integration.coverage \
            /p:CoverletOutputFormat=\"opencover,cobertura\"
        env:
          Jwt__Key: ${{ secrets.jwt_key }}
          Email__Server: ${{ secrets.email_server }}
          Email__Port: ${{ secrets.email_port }}
          Email__Sender: ${{ secrets.email_sender }}
          Email__Username: ${{ secrets.email_username }}
          Email__Password: ${{ secrets.email_password }}
          RedirectUrl__EmailConfirmSuccess: ${{ secrets.redirect_email_confirm_success }}
          RedirectUrl__EmailConfirmFail: ${{ secrets.redirect_email_confirm_fail }}
          RedirectUrl__PasswordReset: ${{ secrets.redirect_password_reset }}
          
      - name: List TestResults folder
        if: always()
        run: ls -R $(pwd)/TestResults

      - name: Code coverage summary
        if: always()
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: $(pwd)/TestResults/*.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: "60 80"

      - name: Add coverage PR comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request' && always()
        with:
          recreate: true
          path: code-coverage-results.md

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
        run: .sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.sonar_token }}"
